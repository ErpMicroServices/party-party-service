# Generated by Django 2.1 on 2018-08-08 03:42

import uuid

import django.db.models.deletion
import mptt.fields
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ('party', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactMechanism',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('end_point', models.TextField()),
                ('directions', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContactMechanismToGeographicBoundary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_mechanism',
                 models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='party.ContactMechanism')),
            ],
        ),
        migrations.CreateModel(
            name='ContactMechanismType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255, unique=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent',
                 mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                            to='party.ContactMechanismType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeographicBoundary',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('geo_code', models.CharField(blank=True, max_length=100)),
                ('name', models.CharField(max_length=200)),
                ('abbreviation', models.CharField(blank=True, max_length=100)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeographicBoundaryAssociation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('contained_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inside',
                                                   to='party.GeographicBoundary')),
                ('containing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='holds',
                                                 to='party.GeographicBoundary')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeographicBoundaryType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255, unique=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent',
                 mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                            to='party.GeographicBoundaryType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartyToContactMechanism',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('from_date', models.DateTimeField(auto_now_add=True)),
                ('thru_date', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('contact_mechanism',
                 models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='party.ContactMechanism')),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='party.Party')),
            ],
        ),
        migrations.AddField(
            model_name='geographicboundary',
            name='contains',
            field=models.ManyToManyField(through='party.GeographicBoundaryAssociation', to='party.GeographicBoundary'),
        ),
        migrations.AddField(
            model_name='geographicboundary',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='party.GeographicBoundaryType'),
        ),
        migrations.AddField(
            model_name='contactmechanismtogeographicboundary',
            name='geographic_boundary',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='party.GeographicBoundary'),
        ),
        migrations.AddField(
            model_name='contactmechanism',
            name='geographic_boundary',
            field=models.ManyToManyField(through='party.ContactMechanismToGeographicBoundary',
                                         to='party.GeographicBoundary'),
        ),
        migrations.AddField(
            model_name='contactmechanism',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='party.ContactMechanismType'),
        ),
        migrations.AddField(
            model_name='party',
            name='contact_mechanisms',
            field=models.ManyToManyField(through='party.PartyToContactMechanism', to='party.ContactMechanism'),
        ),
    ]
