# Generated by Django 2.1 on 2018-08-09 13:07

import uuid

import django.db.models.deletion
import mptt.fields
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ClassificationType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to='party.ClassificationType')),
            ],
            options={
                'ordering': ['description'],
            },
        ),
        migrations.CreateModel(
            name='ContactMechanism',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('end_point', models.TextField()),
                ('directions', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContactMechanismToGeographicBoundary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_mechanism',
                 models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='party.ContactMechanism')),
            ],
        ),
        migrations.CreateModel(
            name='ContactMechanismType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255, unique=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent',
                 mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                            to='party.ContactMechanismType')),
            ],
            options={
                'ordering': ['description'],
            },
        ),
        migrations.CreateModel(
            name='GeographicBoundary',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('geo_code', models.CharField(blank=True, max_length=100)),
                ('name', models.CharField(max_length=200)),
                ('abbreviation', models.CharField(blank=True, max_length=100)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeographicBoundaryAssociation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('contained_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inside',
                                                   to='party.GeographicBoundary')),
                ('containing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='holds',
                                                 to='party.GeographicBoundary')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeographicBoundaryType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255, unique=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent',
                 mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                            to='party.GeographicBoundaryType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('government_id', models.CharField(blank=True, max_length=255, null=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('nickname', models.CharField(blank=True, max_length=255, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PartyClassification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('value', models.TextField()),
                ('from_date', models.DateTimeField(auto_now_add=True)),
                ('thru_date', models.DateTimeField(blank=True, null=True)),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='party.Party')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='party.ClassificationType')),
            ],
        ),
        migrations.CreateModel(
            name='PartyRelationship',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('from_date', models.DateTimeField(auto_now_add=True)),
                ('thru_date', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PartyRole',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('from_date', models.DateTimeField(auto_now_add=True)),
                ('thru_date', models.DateTimeField(blank=True, null=True)),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='party.Party')),
            ],
        ),
        migrations.CreateModel(
            name='PartyToContactMechanism',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('from_date', models.DateTimeField(auto_now_add=True)),
                ('thru_date', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('contact_mechanism',
                 models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='party.ContactMechanism')),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='party.Party')),
            ],
        ),
        migrations.CreateModel(
            name='PartyType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255, unique=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent',
                 mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                            to='party.PartyType')),
            ],
            options={
                'ordering': ['description'],
            },
        ),
        migrations.CreateModel(
            name='PriorityType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to='party.PriorityType')),
            ],
            options={
                'ordering': ['description'],
            },
        ),
        migrations.CreateModel(
            name='RelationshipStatusType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to='party.RelationshipStatusType')),
            ],
            options={
                'ordering': ['description'],
            },
        ),
        migrations.CreateModel(
            name='RelationshipType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to='party.RelationshipType')),
            ],
            options={
                'ordering': ['description'],
            },
        ),
        migrations.CreateModel(
            name='RoleType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to='party.RoleType')),
            ],
            options={
                'ordering': ['description'],
            },
        ),
        migrations.AddField(
            model_name='relationshiptype',
            name='required_from_role_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='required_from_role_type',
                                    to='party.RoleType'),
        ),
        migrations.AddField(
            model_name='relationshiptype',
            name='required_to_role_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='required_to_role_type',
                                    to='party.RoleType'),
        ),
        migrations.AddField(
            model_name='partyrole',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='party.RoleType'),
        ),
        migrations.AddField(
            model_name='partyrelationship',
            name='from_party',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='from_party',
                                    to='party.PartyRole'),
        ),
        migrations.AddField(
            model_name='partyrelationship',
            name='priority',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='party.PriorityType'),
        ),
        migrations.AddField(
            model_name='partyrelationship',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='party.RelationshipStatusType'),
        ),
        migrations.AddField(
            model_name='partyrelationship',
            name='to_party',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='to_party',
                                    to='party.PartyRole'),
        ),
        migrations.AddField(
            model_name='partyrelationship',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='party.RelationshipType'),
        ),
        migrations.AddField(
            model_name='party',
            name='classifications',
            field=models.ManyToManyField(through='party.PartyClassification', to='party.ClassificationType'),
        ),
        migrations.AddField(
            model_name='party',
            name='contact_mechanisms',
            field=models.ManyToManyField(through='party.PartyToContactMechanism', to='party.ContactMechanism'),
        ),
        migrations.AddField(
            model_name='party',
            name='party_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='party.PartyType'),
        ),
        migrations.AddField(
            model_name='party',
            name='roles',
            field=models.ManyToManyField(through='party.PartyRole', to='party.RoleType'),
        ),
        migrations.AddField(
            model_name='geographicboundary',
            name='contains',
            field=models.ManyToManyField(through='party.GeographicBoundaryAssociation', to='party.GeographicBoundary'),
        ),
        migrations.AddField(
            model_name='geographicboundary',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='party.GeographicBoundaryType'),
        ),
        migrations.AddField(
            model_name='contactmechanismtogeographicboundary',
            name='geographic_boundary',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='party.GeographicBoundary'),
        ),
        migrations.AddField(
            model_name='contactmechanism',
            name='geographic_boundary',
            field=models.ManyToManyField(through='party.ContactMechanismToGeographicBoundary',
                                         to='party.GeographicBoundary'),
        ),
        migrations.AddField(
            model_name='contactmechanism',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='party.ContactMechanismType'),
        ),
    ]
